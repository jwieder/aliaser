#!/bin/bash

# ----
# Resolve issues with IP aliasing for Amazon EC2 linux virtual machines
# ----
#


if [ $# -lt 1 ]
then
        echo "No command specified"  
	echo "Usage: $0 start, $0 stop, $0 restart, $0 print or $0 test"
	echo "Execute $0 -h or $0 help for more detailed usage information"
        exit
fi

#echo -n "What is the name of the network alias you would like to bind secondary IPs to? (eth0, eth1, etc): "
#read interface
#printf "\n"
#declare -a ETHINT=($interface)

ETHINT=${ETHINT:-eth0}

function mac-grab {
	MAC_ADDR=$(ip addr list $ETHINT | sed -n 's/.*link\/ether \([a-f0-9:]*\).*/\1/p')
	if test -z "$MAC_ADDR" ; then
	    MAC_ADDR=$(ifconfig $ETHINT | sed -n 's/.*ether \([a-f0-9:]*\).*/\1/p')
	fi
	if test -z "$MAC_ADDR" ; then
	    echo "Can't determine mac address, giving up"
	    exit 1
	fi
	MAC_ADDR=$(echo "$MAC_ADDR" | tr 'A-F' 'a-f')
}

function public-grab {
	PUBLIC=($(curl -s -f http://169.254.169.254/latest/meta-data/public-ipv4))
}

function private-grab {
	PRIVATE=($(curl -s -f http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/local-ipv4s))
}

function primary-private-grab {
	PRIMARYPRIV=($(curl -s -f http://169.254.169.254/latest/meta-data/local-ipv4))
}

function private-loop {
        local priv
	for priv in ${PRIVATE[@]:1};
        do
                echo "Adding IP: $priv"
                ip addr add dev $ETHINT $priv/$SUBNET_CIDR_BLOCK
        done
}

function subnet-cidr-block-grab {
  SUBNET_CIDR_BLOCK=($(curl -s -f http://169.254.169.254/latest/meta-data/network/interfaces/macs/$MAC_ADDR/subnet-ipv4-cidr-block | sed -e 's/^.*\///'))
}

case "$1" in

'-h' | '-H' | 'help') printf "\nAliaser v0.01\nUsage: $0 -h\n$0 help\n$0 version\n$0 start\n$0 restart\n$0 stop\n$0 print\n$0 test\n\n"
	;;

'version' | '-v' | '-V') printf "aliaser v0.01
-----------------------------------
Â©2015 Josh Wieder\nhttp://www.joshwieder.net/\njosh.wieder@live.com
-----------------------------------
aliaser comes with ABSOLUTELY NO WARRANTY.
This is free software made available through
the GNU General Public License v2. You are
welcome to redistribute it under certain
conditions - see LICENSE for details.\n\n"
        ;;

'start') mac-grab
	private-grab
  subnet-cidr-block-grab
	private-loop
	;;

'restart') service network restart
	mac-grab
	private-grab        
  subnet-cidr-block-grab
	private-loop
	;;

'stop') service network restart
	;;

'print' | '-p' | '-P') mac-grab
	
	primary-private-grab
	printf "Primary private IPs:  %s\n" "$PRIMARYPRIV"

	private-grab
        for priv in ${PRIVATE[@]:1};
	do
		printf "Secondary Private IP:  %s\n" "$priv" 
	done

   	public-grab
        printf "Primary public IP:  %s\n\n" "$PUBLIC";
#	printf "Interface:  %s\n" "$ETHINT";

	;;

'test' | 'verify')  mac-grab
	private-grab
	curltest=$(curl -s -f --interface ${PRIVATE[@]:1} ifconfig.me)
 	printf "Secondary public IP: %s\n" "$curltest"
	;;

*) printf "Invalid option - try $0 -h or $0 help for correct usage"
	;;
esac
